DROP TABLE IF EXISTS candidate;
CREATE TABLE candidate(
    id INT AUTO_INCREMENT,
    fullname VARCHAR(30) NOT NULL,
    PRIMARY KEY (id)
);

----------------------------------------------

DROP TABLE IF EXISTS users_rols;
DROP TABLE IF EXISTS rol;
DROP TABLE IF EXISTS user;
CREATE TABLE user(
    id INT AUTO_INCREMENT,
    name VARCHAR(20) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(30) NOT NULL UNIQUE,
    status VARCHAR(20) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE rol(
    id INT AUTO_INCREMENT,
    name VARCHAR(20) NOT NULL,
    description VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE users_rols(
    user_id INT,
    rol_id INT,
    PRIMARY KEY (user_id, rol_id),
    FOREIGN KEY(user_id) REFERENCES user(id) ON DELETE CASCADE,
    FOREIGN KEY(rol_id) REFERENCES rol(id) ON DELETE CASCADE
);

INSERT INTO user(
    name, password, email, status
)VALUES(
    'Test', '$2a$10$DD/FQ0hTIprg3fGarZl1reK1f7tzgM4RuFKjAKyun0Si60w6g3v5i', 'test@test.com', 'VERIFIED'
);

INSERT INTO rol(
    name, description
)VALUES(
    'ADMIN', 'Usuario administrador del sistema'
),(
    'USER', 'Usuario com√∫n del sistema'
);

INSERT INTO users_rols(
    user_id, rol_id
)VALUES(
    1, 1
),(
    1, 2
);

#################################################################
#################################################################
                        PostgreSQL
#################################################################
#################################################################

DROP TABLE IF EXISTS petition, appuser;

CREATE TABLE appuser (
    id SERIAL PRIMARY KEY NOT NULL,
    first_name VARCHAR(20) NOT NULL,
    last_name VARCHAR(20) NOT NULL,
    email VARCHAR(30) NOT NULL,
    password VARCHAR(100) NOT NULL,
    type VARCHAR(1) NOT NULL
);

CREATE TABLE petition(
    id SERIAL PRIMARY KEY NOT NULL,
    order_date date NOT NULL,
    order_hour timestamptz NOT NULL,
    helped_id INT NOT NULL,
    colaborator_id INT NOT NULL,
    FOREIGN KEY (helped_id) REFERENCES appuser(id) ON UPDATE CASCADE,
    FOREIGN KEY (colaborator_id) REFERENCES appuser(id) ON UPDATE CASCADE
);

INSERT INTO appuser(
    first_name,
    last_name,
    email,
    password,
    type
)VALUES
('Lucas','Camino','lucascamino@test.com','1234','C'),
('Claudia','Genchi','claudiagenchi@test.com','1234','C'),
('Eduardo','Camino','eduardocamino@test.com','1234','C'),
('Agustina','Camino','agustinacamino@test.com','1234','C'),
('Yiye','Camino','yiyecamino@test.com','1234','H'),
('Marga','Carreras','margacarreras@test.com','1234','H'),
('Random','Viejo','randomviejo@test.com','1234','H');


INSERT INTO petition(
    order_date, order_hour, helped_id, colaborator_id)
    VALUES
    (now(), now() + '- 6 hours', 5, 1),
    (now(), now() + '- 13 hours', 6, 1),
    (now(), now() + '- 5 hours', 5, 1),
    (now(), now() + '- 4 hours', 5, 1),
    (now(), now() + '- 3 hours', 5, 1),
    (now(), now() + '- 2 hours', 5, 1),
    (now(), now() + '- 17 hours', 5, 3);
